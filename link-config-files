#!/usr/bin/python3
# pyright: strict
import json
import os.path
from pathlib import Path
from typing import Dict, Optional

repo = Path(__file__).parent

with open(repo / "symlinks.json") as f:
    link_map: Dict[str, Optional[str]] = json.load(f)

for conf_dest, conf_src in link_map.items():
    if conf_src is None:
        parts = Path(conf_dest).parts
        root = parts[0][1:] if parts[0].startswith(".") else parts[0]
        conf_src = Path(root).joinpath(*parts[1:])

    src = repo / conf_src
    dest = Path.home() / conf_dest

    if dest.is_symlink() or dest.exists():
        target = Path(os.readlink(dest))

        if target == src:
            pass
        else:
            print(f"was linked to different target: {conf_dest} -> {target}")
    else:
        dest.parent.mkdir(parents=True, exist_ok=True)
        dest.symlink_to(src)
        print(f"created link: {conf_dest} -> {conf_src}")

print("Done!")
