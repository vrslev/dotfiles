#!/usr/bin/env uvx python@3.13
# pyright: strict
import json
import os
from pathlib import Path
from typing import Dict, Optional

REPO_PATH = Path(__file__).parent
with open(REPO_PATH / "symlinks.json") as f:
    config: Dict[str, Optional[str]] = json.load(f)

for small_destination, small_source in config.items():
    if small_source is None:
        parts = Path(small_destination).parts
        root = parts[0][1:] if parts[0].startswith(".") else parts[0]
        small_source = Path(root).joinpath(*parts[1:])

    full_source = REPO_PATH / small_source
    full_destination = Path(small_destination) if small_destination.startswith("/") else Path.home() / small_destination

    if full_destination.is_symlink():
        if full_source != (linked_to := Path(os.readlink(full_destination))):
            print(f"was linked to different target: {small_destination} -> {linked_to}")
    elif full_destination.exists():
        print(f"already exists: {small_destination}")
    else:
        full_destination.parent.mkdir(parents=True, exist_ok=True)
        full_destination.symlink_to(full_source)
        print(f"created link: {small_destination} -> {small_source}")

print("Done!")
